# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Author: Ivan Morgillo, <imorgillo [at] sanniolug [dot] org>

# intelswitch

#!/bin/bash        

LVDS_res=1280x800
VGA_res=1680x1050

function usage {
          if [ -z "$1" ]; then 
	      echo 
              echo intelswitch by Ivan Morgillo
	      echo Enable/Disable VGA external monitor with Intel 965
	      echo
	      echo Usage: $ intelswitch mode
	      echo \"mode\" can be \"vga\" or \"lvds\"
	      echo
	      echo If your current configuration have no VGA $VGA_res@60 mode
	      echo intelswitch creates it, when possible.
	      echo
	      echo If you want to create a new mode, simply use:
	      echo $ intelswitch --newmode
              exit
          fi

}

function newmode {
    if [ -e /usr/bin/cvt ]; then
    echo "You can now create a new mode for you display."
    echo "Enter values you want."
    echo "For example, if you want 1680x1050 @ 60 Hz resolution: 1680 1050 60"
    read X Y refresh
    echo "You asked for a: \"$X x $Y @ $refresh Hz\" resolution"
    cvt $X $Y $refresh | grep Modeline > res
    #cvt=`awk 'END {print NF}' res`
    #echo $cvt
    temp=`awk '{print $3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13}' res`
    mode=\"$X\x$Y\@$refresh\"" "$temp
    echo $mode
    xrandr --newmode $mode
    xrandr --addmode VGA $X\x$Y\@$refresh
    xrandr -q
    else
	echo Cannot find cvt. Use your package manager to install it.
	exit
    fi
}

function toggle {
    currentMode=`xrandr | grep current | awk '{print $8}'`
    if [ "$currentMode" = "1680" ]; then
	setLVDS
    else
	setVGA
    fi
}

function setVGA {
    echo Tring to enable VGA...
    echo Checking if VGA $VGA_res@60 mode exists...
    
    xrandr -q | grep $VGA_res@60
    if [ "$?" = "0" ]; then
	echo Got it!
	xrandr --output VGA --mode $VGA_res@60 --output LVDS --off
    else
	echo  Mode not found. Creating VGA 1680x1050@60 mode.
	xrandr --newmode "$VGA_res@60" 146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
	xrandr --addmode VGA $VGA_res@60
	xrandr --output VGA --mode $VGA_res@60 --output LVDS --off
    fi
}

function setLVDS {
    echo Disable VGA
    xrandr --output VGA --off --output LVDS --mode $LVDS_res
}

if  [ "$1" = "--newmode" ]; then
    newmode
elif  [ "$1" = "toggle" ]; then
    toggle
elif  [ "$1" = "vga" ]; then
    setVGA
elif  [ "$1" = "lvds" ]; then
    setLVDS
else
    usage
    exit
fi

